(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{380:function(t,e,s){"use strict";s.r(e);var a=s(25),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"inner-equijoin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inner-equijoin"}},[t._v("#")]),t._v(" Inner - Equijoin")]),t._v(" "),s("p",[t._v("The old style join method.")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("departments\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" department"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("and the common attribute will be shown")]),t._v(" "),s("p",[t._v("Equijoin = Calculate from Cartesian Product → Match the rows that have a match on WHERE statement → Merge the table → Remove the foreign key")]),t._v(" "),s("p",[t._v("To merge the table, the common key need to be typed in, else the sql may not able to merge them (because they can have multiple common attribute")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" departments d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" locations l\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department_id\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location_id\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);